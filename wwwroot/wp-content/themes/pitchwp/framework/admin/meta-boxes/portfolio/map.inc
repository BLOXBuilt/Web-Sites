<?php

$qode_pages = array();
$pages = get_pages(); 
foreach($pages as $page) {
	$qode_pages[$page->ID] = $page->post_title;
}

global $qode_pitch_IconCollections;

//Portfolio Images

$qodePortfolioImages = new QodePitchMetaBox("portfolio_page", "Portfolio Images (multiple upload)");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("portfolio_images",$qodePortfolioImages);

	$qode_portfolio_image_gallery = new QodePitchMultipleImages("qode_portfolio-image-gallery","Portfolio Images","Choose your portfolio images");
	$qodePortfolioImages->addChild("qode_portfolio-image-gallery",$qode_portfolio_image_gallery);

/*//Portfolio Images/Videos

$qodePortfolioImagesVideos = new QodePitchMetaBox("portfolio_page", "Qode Portfolio Images/Videos (single upload)");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("portfolio_images_videos",$qodePortfolioImagesVideos);

	$qode_portfolio_images_videos = new QodePitchImagesVideos("Portfolio Images/Videos","ThisIsDescription");
	$qodePortfolioImagesVideos->addChild("qode_portfolio_images_videos",$qode_portfolio_images_videos);
*/
//Portfolio Images/Videos 2

$qodePortfolioImagesVideos2 = new QodePitchMetaBox("portfolio_page", "Portfolio Images/Videos (single upload)");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("portfolio_images_videos2",$qodePortfolioImagesVideos2);

	$qode_portfolio_images_videos2 = new QodePitchImagesVideosFramework("Portfolio Images/Videos 2","ThisIsDescription");
	$qodePortfolioImagesVideos2->addChild("qode_portfolio_images_videos2",$qode_portfolio_images_videos2);

//Portfolio Additional Sidebar Items

$qodeAdditionalSidebarItems = new QodePitchMetaBox("portfolio_page", "Additional Portfolio Sidebar Items");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("portfolio_properties",$qodeAdditionalSidebarItems);

	$qode_portfolio_properties = new QodePitchOptionsFramework("Portfolio Properties","ThisIsDescription");
	$qodeAdditionalSidebarItems->addChild("qode_portfolio_properties",$qode_portfolio_properties);


//General

$qodeGeneral = new QodePitchMetaBox("portfolio_page", "General");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("portfolio_general",$qodeGeneral);

	$qode_page_background_color = new QodePitchMetaField("color","qode_page_background_color","","Page Background Color","Choose the page background (body) color");
	$qodeGeneral->addChild("qode_page_background_color",$qode_page_background_color);

	$group1 = new QodePitchGroup("Content Style","Define styles for Content area");
	$qodeGeneral->addChild("group1",$group1);

		$row1 = new QodePitchRow();
		$group1->addChild("row1",$row1);

			$qode_content_top_padding = new QodePitchMetaField("textsimple","qode_content-top-padding","","Content Top Padding (px)","This option control content top padding.");
			$row1->addChild("qode_content-top-padding",$qode_content_top_padding);

			$qode_content_top_padding_mobile = new QodePitchMetaField("selectblanksimple","qode_content-top-padding-mobile","","Set this top padding for mobile header","", array(
		       "no" => "No",
		       "yes" => "Yes"
		      ));
			$row1->addChild("qode_content-top-padding-mobile",$qode_content_top_padding_mobile);

	$qode_show_animation = new QodePitchMetaField("selectblank","qode_show-animation","","Page Transition",'Choose a type of transition between loading pages.', array(
       "no_animation" => "No Animation",
       "updown" => "Up / Down",
       "fade" => "Fade",
		"updown_fade" => "Up/Down (In) / Fade (Out)",
       "leftright" => "Left / Right"
      ), array(), "enable_grid_elements", array("yes"));
	$qodeGeneral->addChild("qode_show-animation",$qode_show_animation);

	$page_transitions_notice = new QodePitchNotice("Page Transition",'Choose a a type of transition between loading pages. In order for animation to work properly, you must choose "Post name" in permalinks settings', "AJAX Page transitions are disabled due to VC Grid Elements", "enable_grid_elements","no");
	$qodeGeneral->addChild("page_transitions_notice",$page_transitions_notice);

	$qode_revolution_slider = new QodePitchMetaField("text","qode_revolution-slider","","Layer Slider or Select Slider Shortcode","Copy and paste your shortcode located in Select Slider -> Slider");
	$qodeGeneral->addChild("qode_revolution-slider",$qode_revolution_slider);

	$qode_choose_portfolio_single_view = new QodePitchMetaField("selectblank","qode_choose-portfolio-single-view","","Portfolio Type",'Choose a default type for Single Project pages', array(
		"floating-right" => "Portfolio text floating right",
		"floating-left" => "Portfolio text floating left",
		"fixed-right" => "Portfolio text fixed right",
		"fixed-left" => "Portfolio text fixed left",
		"big-slider" => "Portfolio big slider",
		"custom" => "Portfolio custom",
		"central" => "Portfolio central",
		"gallery" => "Portfolio gallery",
		"gallery-right" => "Portfolio gallery right",
		"masonry-gallery-top" => "Portfolio masonry gallery top",
		"masonry-gallery-bottom" => "Portfolio masonry gallery bottom",
		"masonry-gallery-right" => "Portfolio masonry gallery right"
	),
        array("dependence" => true,
            "hide" => array(
                ""=>"#qodef_qode_choose_number_of_portfolio_columns_container",
                "custom"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
                "big-slider"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
                "floating-right"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
				"floating-left"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
				"fixed-right"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
				"fixed-left"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
				"masonry-gallery-top"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
				"masonry-gallery-bottom"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
				"masonry-gallery-right"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
				"central"=>"#qodef_qode_choose_number_of_portfolio_columns_container"
            ),
            "show" => array(
                "gallery"=>"#qodef_qode_choose_number_of_portfolio_columns_container",
				"gallery-right"=>"#qodef_qode_choose_number_of_portfolio_columns_container")
        )
    );
	$qodeGeneral->addChild("qode_choose-portfolio-single-view",$qode_choose_portfolio_single_view);

    $qode_choose_number_of_portfolio_columns_container = new QodePitchContainer("qode_choose_number_of_portfolio_columns_container","qode_choose-portfolio-single-view","no",array("", "1", "2", "3", "4", "5", "7"));
    $qodeGeneral->addChild("qode_choose_number_of_portfolio_columns_container",$qode_choose_number_of_portfolio_columns_container);

$qode_choose_number_of_portfolio_columns = new QodePitchMetaField("selectblank","qode_choose-number-of-portfolio-columns","","Number of Columns",'Choose the number of columns for Portfolio Gallery type', array(
		"2" => "2 Columns",
		"3" => "3 Columns",
		"4" => "4 Columns"
	));
    $qode_choose_number_of_portfolio_columns_container->addChild("qode_choose-number-of-portfolio-columns",$qode_choose_number_of_portfolio_columns);

    $qode_choose_portfolio_image_size = new QodePitchMetaField("select","qode_choose-portfolio-image-size","full","Image Proportions",'Choose image proportions for Portfolio Gallery type', array(
        "full" => "Original Size",
        "portfolio-square" => "Square",
        "portfolio-landscape" => "Landscape",
        "portfolio-portrait" => "Portrait"
    ));

    $qode_choose_number_of_portfolio_columns_container->addChild("qode_choose-portfolio-image-size",$qode_choose_portfolio_image_size);

    $qode_choose_portfolio_list_page = new QodePitchMetaField("selectblank","qode_choose-portfolio-list-page","",'"Back To" Link','Choose "Back To" page to link from portfolio Single Project page',$qode_pages);
	$qodeGeneral->addChild("qode_choose-portfolio-list-page",$qode_choose_portfolio_list_page);

	$qode_portfolio_external_link = new QodePitchMetaField("text","qode_portfolio-external-link","","Portfolio External Link","Enter URL to link from Portfolio List page");
	$qodeGeneral->addChild("qode_portfolio-external-link",$qode_portfolio_external_link);

    $qode_portfolio_lightbox_link = new QodePitchMetaField("text","qode_portfolio-lightbox-link","","Portfolio Custom Lighbox Content","Enter URL to link custom image/video content inside lightbox");
    $qodeGeneral->addChild("qode_portfolio-lightbox-link",$qode_portfolio_lightbox_link);

	$qode_portfolio_type_masonry_style = new QodePitchMetaField("select","qode_portfolio_type_masonry_style","","Dimensions for Masonry",'Choose image layout when it appears in Masonry type portfolio lists', array(
		"default" => "Default",
		"large_width" => "Large width",
		"large_height" => "Large height",
		"large_width_height" => "Large width/height"
	));
	$qodeGeneral->addChild("qode_portfolio_type_masonry_style",$qode_portfolio_type_masonry_style);
	
	$qode_portfolio_masonry_parallax = new QodePitchMetaField("select","qode_portfolio_masonry_parallax","no","Set Masonry Item in Parallax","", array(
		"no" => "No",
		"yes" => "Yes"
	));
	$qodeGeneral->addChild("qode_portfolio_masonry_parallax",$qode_portfolio_masonry_parallax);
	
	$qode_portfolio_disable_comments = new QodePitchMetaField("selectblank","qode_portfolio-hide-comments","","Disable Comments","", array(
		"no" => "No",
		"yes" => "Yes"
	));
    $qodeGeneral->addChild("qode_portfolio-hide-comments",$qode_portfolio_disable_comments);

    $qode_image_hover_container = new QodePitchGroup("Image Hover Style", "Define style for hover color");
	$qodeGeneral->addChild("qode_image_hover_container", $qode_image_hover_container);

		$row11 = new QodePitchRow();
		$qode_image_hover_container->addChild("row11", $row11);

			$qode_portfolio_hover_color = new QodePitchMetaField("colorsimple","qode_portfolio-hover-color","","Portfolio Hover Color","");
			$row11->addChild("qode_portfolio-hover-color",$qode_portfolio_hover_color);

			$qode_portfolio_hover_color_opacity = new QodePitchMetaField("textsimple","qode_portfolio-hover-color-opacity","","Portfolio Hover Color Opacity","");
			$row11->addChild("qode_portfolio-hover-color-opacity",$qode_portfolio_hover_color_opacity);
	
	$qode_portfolio_enable_animation= new QodePitchMetaField("selectblank","qode_portfolio-enable_animation","","Enable Loading Animation for Images","", array(
		"yes" => "Yes",
		"no" => "No"
	));
    $qodeGeneral->addChild("qode_portfolio-enable_animation",$qode_portfolio_enable_animation);

	$qode_portfolio_hide_title_in_info = new QodePitchMetaField("select","qode_portfolio_hide_title_in_info","no","Hide Title in Portfolio Info Section","", array(
		"no" => "No",
		"yes" => "Yes"
	));
	$qodeGeneral->addChild("qode_portfolio_hide_title_in_info",$qode_portfolio_hide_title_in_info);

// Header

$qodeHeader = new QodePitchMetaBox("portfolio_page", "Header","vertical_area",array("yes"));
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("porfolio_header",$qodeHeader);

	$qode_header_style = new QodePitchMetaField("selectblank","qode_header-style","","Header Skin","Choose a header style to make header elements (logo, main menu, side menu button) in that predefined style", array(
       "light" => "Light",
       "dark" => "Dark"
      ));
	$qodeHeader->addChild("qode_header-style",$qode_header_style);

    $qode_header_style_on_scroll = new QodePitchMetaField("selectblank","qode_header-style-on-scroll","","Enable Header Style on Scroll","Enabling this option, header will change style on scroll (depending on row settings) to make header elements (logo, main menu, side menu button) in that style", array(
        "no" => "No",
        "yes" => "Yes"
    ));
    $qodeHeader->addChild("qode_header-style-on-scroll",$qode_header_style_on_scroll);

	$qode_header_color_per_page = new QodePitchMetaField("color","qode_header_color_per_page","","Initial Header Bottom Background Color","Choose a background color for header bottom area");
	$qodeHeader->addChild("qode_header_color_per_page",$qode_header_color_per_page);

	$qode_header_color_transparency_per_page = new QodePitchMetaField("text","qode_header_color_transparency_per_page","","Initial Header Bottom Transparency","Choose a transparency for the header bottom background color (0 = fully transparent, 1 = opaque)", array(), array("col_width" => 3));
	$qodeHeader->addChild("qode_header_color_transparency_per_page",$qode_header_color_transparency_per_page);

	$qode_header_bottom_border_color = new QodePitchMetaField("color","qode_header_bottom_border_color","","Initial Header Bottom Border Color","Choose a bottom border color for header area");
	$qodeHeader->addChild("qode_header_bottom_border_color",$qode_header_bottom_border_color);

	$qode_header_top_color_per_page = new QodePitchMetaField("color","qode_header_top_color_per_page","","Initial Header Top Background Color","Choose a background color for header top area");
	$qodeHeader->addChild("qode_header_top_color_per_page",$qode_header_top_color_per_page);

	$qode_header_top_color_transparency_per_page = new QodePitchMetaField("text","qode_header_top_color_transparency_per_page","","Initial Header Top Transparency","Choose a transparency for the header top background color (0 = fully transparent, 1 = opaque)", array(), array("col_width" => 3));
	$qodeHeader->addChild("qode_header_top_color_transparency_per_page",$qode_header_top_color_transparency_per_page);

	$qode_page_scroll_amount_for_sticky = new QodePitchMetaField("text","qode_page_scroll_amount_for_sticky","","Scroll amount for sticky header appearance (px)","Define scroll amount for sticky header appearance", array(), array("col_width" => 3),"header_bottom_appearance",array( "regular","fixed","fixed_hiding") );
	$qodeHeader->addChild("qode_page_scroll_amount_for_sticky",$qode_page_scroll_amount_for_sticky);
	
	$qode_page_hide_initial_sticky = new QodePitchMetaField("selectblank","qode_page_hide_initial_sticky","","Hide Sticky Header Initially","Enabling this option will initially hide the header, and it will only be displayed when the user scrolls down the page", array(
		"no" => "No",
		"yes" => "Yes"	
	));
	$qodeHeader->addChild("qode_page_hide_initial_sticky",$qode_page_hide_initial_sticky);

// Side Menu Area

$qodeLeftMenuArea = new QodePitchMetaBox("portfolio_page", "Side Menu Area","vertical_area",array("no"));
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("porfolio_left_menu",$qodeLeftMenuArea);

	$qode_page_vertical_area_transparency = new QodePitchMetaField("selectblank","qode_page_vertical_area_transparency","","Enable transparent side menu area","Enabling this option will make Left Menu background transparent ", array(
       "no" => "No",
       "yes" => "Yes"
      ));
	$qodeLeftMenuArea->addChild("qode_page_vertical_area_transparency",$qode_page_vertical_area_transparency);

	$qode_page_vertical_area_background = new QodePitchMetaField("color","qode_page_vertical_area_background","","Side Menu Area Background Color","Choose a color for Left Menu background");
	$qodeLeftMenuArea->addChild("qode_page_vertical_area_background",$qode_page_vertical_area_background);
	
	$qode_page_vertical_area_background_opacity = new QodePitchMetaField("text","qode_page_vertical_area_background_opacity","","Side Menu Area Background Opacity","Choose a opacity for the Side Menu Area Background (0 = fully transparent, 1 = opaque)", array(), array("col_width" => 3));
	$qodeLeftMenuArea->addChild("qode_page_vertical_area_background_opacity",$qode_page_vertical_area_background_opacity);
	
	$qode_page_vertical_area_transparency_over_slider = new QodePitchMetaField("selectblank","qode_page_vertical_area_transparency_over_slider","","Transparency Setting Takes Effect Only on Select Slider","Enabling this option will ensure that the transparency set in the 'Side Menu Area Background Opacity' takes effect only when the side menu area is over the Qode Slider", array(
	   "no" => "No",
	   "yes" => "Yes"
	  ));
	$qodeLeftMenuArea->addChild("qode_page_vertical_area_transparency_over_slider",$qode_page_vertical_area_transparency_over_slider);

	$qode_page_vertical_area_background_image = new QodePitchMetaField("image","qode_page_vertical_area_background_image","","Side Menu Area Background Image","Choose an image for Left Menu background");
	$qodeLeftMenuArea->addChild("qode_page_vertical_area_background_image",$qode_page_vertical_area_background_image);
	
	$qode_page_disable_vertical_area_background_image = new QodePitchMetaField("selectblank","qode_page_disable_vertical_area_background_image","","Disable Side Menu Area Background Image","Enabling this option will hide background image in Side Menu", array(
	   "no" => "No",
	   "yes" => "Yes"
	  ));
	$qodeLeftMenuArea->addChild("qode_page_disable_vertical_area_background_image",$qode_page_disable_vertical_area_background_image);

// Title

$QodePitchTitle = new QodePitchMetaBox("portfolio_page", "Title");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("porfolio_title",$QodePitchTitle);

	$qode_show_page_title = new QodePitchMetaField("selectblank","qode_show-page-title","","Show Title Area","Disabling this option will turn off page title area", array(
		"no" => "No",
		"yes" => "Yes"),
		array("dependence" => true,
			"hide" => array(
				"no"=>"#qodef_qode_page_title_area_container, #qodef-meta-box-portfolio_title_animations"),
			"show" => array(
				""=>"#qodef_qode_page_title_area_container, #qodef-meta-box-portfolio_title_animations",
				"yes"=>"#qodef_qode_page_title_area_container, #qodef-meta-box-portfolio_title_animations") ));
	$QodePitchTitle->addChild("qode_show-page-title",$qode_show_page_title);

	$qode_page_title_area_container = new QodePitchContainer("qode_page_title_area_container","qode_show-page-title","no");
	$QodePitchTitle->addChild("qode_page_title_area_container",$qode_page_title_area_container);

	$qode_page_title_type = new QodePitchMetaField("selectblank","qode_page_title_type","","Title Type","Choose title type for this page.",array(
		"standard_title" => "Standard",
		"breadcrumbs_title" => "Breadcrumbs"
	),array(
      	"dependence" => true,
      	"hide" => array("breadcrumbs_title" => "#qodef_qode_title_standard_container"),
      	"show" => array("standard_title" => "#qodef_qode_title_standard_container","" => "#qodef_qode_title_standard_container")
      ));
	$qode_page_title_area_container->addChild("qode_page_title_type",$qode_page_title_type);

	$qode_animate_page_title = new QodePitchMetaField("selectblank","qode_animate_page_title","","Animations","Choose an animation for Title Area",array(
		"no" => "No animation",
		"text_right_left" => "Text right to left",
		"area_top_bottom" => "Title area top to bottom"
	));
	$qode_page_title_area_container->addChild("qode_animate_page_title",$qode_animate_page_title);
	
	$qode_page_page_title_vertical_aligment = new QodePitchMetaField("selectblank","qode_page_page_title_vertical_aligment","","Vertical Alignment","Specify Title vertical alignment", array(
		"header_bottom" => "From Bottom of Header",
		"window_top" => "From Window Top"
	 ));
	$qode_page_title_area_container->addChild("qode_page_page_title_vertical_aligment",$qode_page_page_title_vertical_aligment);

	$qode_page_title_position = new QodePitchMetaField("selectblank","qode_page_title_position","","Title Content Alignment","Specify title content alignment",array(
		"left" => "Left",
		"center" => "Center",
		"right" => "Right"
	));
	$qode_page_title_area_container->addChild("qode_page_title_position",$qode_page_title_position);
	
	$qode_show_page_title_text = new QodePitchMetaField("selectblank","qode_show_page_title_text","","Show Title Text","Disabling this option will turn off page title text", array(
		"no" => "No",
		"yes" => "Yes"),
		array("dependence" => true,
			"hide" => array(
				"no"=>"#qodef_qode_title_text_container, #qodef_animation_page_page_title_container"),
			"show" => array(
				""=>"#qodef_qode_title_text_container, #qodef_animation_page_page_title_container",
				"yes"=>"#qodef_qode_title_text_container, #qodef_animation_page_page_title_container") ));
	$qode_page_title_area_container->addChild("qode_show_page_title_text",$qode_show_page_title_text);

	$qode_title_text_container = new QodePitchContainer("qode_title_text_container","qode_show_page_title_text","no");
	$qode_page_title_area_container->addChild("qode_title_text_container",$qode_title_text_container);

	$group1 = new QodePitchGroup("Title Text Style","Define styles for text in Title Area");
	$qode_title_text_container->addChild("group1",$group1);

	$row1 = new QodePitchRow();
	$group1->addChild("row1",$row1);

	$qode_page_title_color = new QodePitchMetaField("colorsimple","qode_page-title-color","","Text Color","ThisIsDescription");
	$row1->addChild("qode_page-title-color",$qode_page_title_color);

	$qode_title_text_shadow = new QodePitchMetaField("selectblanksimple","qode_title_text_shadow","","Text Shadow","ThisIsDescription",array(
		"no" => "No",
		"yes" => "yes"
	));
	$row1->addChild("qode_title_text_shadow",$qode_title_text_shadow);

	$qode_page_title_font_size = new QodePitchMetaField("selectblanksimple","qode_page_title_font_size","","Text Size","ThisIsDescription",array(
		"small" => "Small",
		"medium" => "Medium",
		"large" => "Large"
	));
	$row1->addChild("qode_page_title_font_size",$qode_page_title_font_size);

	$qode_title_standard_container = new QodePitchContainer("qode_title_standard_container","qode_page_title_type","breadcrumbs_title");
	$qode_page_title_area_container->addChild("qode_title_standard_container",$qode_title_standard_container);

	$qode_title_like_separator = new QodePitchMetaField("selectblank","qode_title_like_separator","","Show Separator Around Title Text","Choose if you want title to look like separator with text",array(
			"no" => "No",
			"yes" => "Yes"
		), array("dependence" => true,
		 	"hide" => array(
				"no" => "#qodef_qode_title_like_separator_container",
				"" => "#qodef_qode_title_like_separator_container"
				),
		    "show" => array(
				"yes" => "#qodef_qode_title_like_separator_container"
				)
		  )
		);
	$qode_title_standard_container->addChild("qode_title_like_separator",$qode_title_like_separator);

	$qode_title_like_separator_container = new QodePitchContainer("qode_title_like_separator_container","qode_title_like_separator","", array('', 'no'));
	$qode_title_standard_container->addChild("qode_title_like_separator_container",$qode_title_like_separator_container);

		$group1 = new QodePitchGroup("Line Styles", "Choose style for separator line");
		$qode_title_like_separator_container->addChild("group1",$group1);

			$row1 = new QodePitchRow();
			$group1->addChild("row1",$row1);

				$qode_title_like_separator_line_color = new QodePitchMetaField("colorsimple","qode_title_like_separator_line_color","","Color","This is some description");
				$row1->addChild("qode_title_like_separator_line_color",$qode_title_like_separator_line_color);

				$qode_title_like_separator_line_width = new QodePitchMetaField("textsimple","qode_title_like_separator_line_width","","Width","This is some description");
				$row1->addChild("qode_title_like_separator_line_width",$qode_title_like_separator_line_width);

				$qode_title_like_separator_line_thickness = new QodePitchMetaField("textsimple","qode_title_like_separator_line_thickness","","Thickness","This is some description");
				$row1->addChild("qode_title_like_separator_line_thickness",$qode_title_like_separator_line_thickness);

				$qode_title_like_separator_line_style = new QodePitchMetaField("selectsimple","qode_title_like_separator_line_style","","Style","This is some description",array(
					"solid" => "Solid",
					"dashed" => "Dashed",
					"dotted" => "Dotted"
					));
				$row1->addChild("qode_title_like_separator_line_style",$qode_title_like_separator_line_style);

		$qode_title_like_separator_margins = new QodePitchMetaField("text","qode_title_like_separator_margins","","Margins for Title","Define left/right margins for title from separator");
		$qode_title_like_separator_container->addChild("qode_title_like_separator_margins",$qode_title_like_separator_margins);

		$qode_title_like_separator_line_dots = new QodePitchMetaField("selectblank","qode_title_like_separator_line_dots","","Dots on The End of Lines","Enabling this option will give lines a dot next to title",array(
				"no" => "No",
				"yes" => "Yes"
			),array(
				"dependence" => true,
				"hide" => array("no" => "#qodef_qode_title_like_separator_dots_container"),
				"show" => array("yes" => "#qodef_qode_title_like_separator_dots_container","" => "#qodef_qode_title_like_separator_dots_container")
			));
		$qode_title_like_separator_container->addChild("qode_title_like_separator_line_dots",$qode_title_like_separator_line_dots);

		$qode_title_like_separator_dots_container = new QodePitchContainer("qode_title_like_separator_dots_container","qode_title_like_separator_line_dots","no");
		$qode_title_like_separator_container->addChild("qode_title_like_separator_dots_container",$qode_title_like_separator_dots_container);

			$group1 = new QodePitchGroup("Dots Style","Choose style for dots");
			$qode_title_like_separator_dots_container->addChild("group1",$group1);

				$row1 = new QodePitchRow();
				$group1->addChild("row1",$row1);

					$qode_title_like_separator_dots_size = new QodePitchMetaField("textsimple","qode_title_like_separator_dots_size","","Size (px)","This is some description");
					$row1->addChild("qode_title_like_separator_dots_size",$qode_title_like_separator_dots_size);

					$qode_title_like_separator_dots_color = new QodePitchMetaField("colorsimple","qode_title_like_separator_dots_color","","Color","This is some description");
					$row1->addChild("qode_title_like_separator_dots_color",$qode_title_like_separator_dots_color);
	
	//Subtitle like separator with text
	$qode_subtitle_like_separator = new QodePitchMetaField("selectblank","qode_subtitle_like_separator","","Show Separator Around Subtitle Text","Choose if you want title to look like separator with text",array(
			"no" => "No",
			"yes" => "Yes"
		), array("dependence" => true,
		 	"hide" => array(
				"no" => "#qodef_qode_subtitle_like_separator_container",
				"" => "#qodef_qode_subtitle_like_separator_container"
			),
		    "show" => array(
				"yes" => "#qodef_qode_subtitle_like_separator_container"
			)
		  )
		);
	$qode_title_standard_container->addChild("qode_subtitle_like_separator",$qode_subtitle_like_separator);

	$qode_subtitle_like_separator_container = new QodePitchContainer("qode_subtitle_like_separator_container","qode_subtitle_like_separator","", array('', 'no'));
	$qode_title_standard_container->addChild("qode_subtitle_like_separator_container",$qode_subtitle_like_separator_container);

		$group1 = new QodePitchGroup("Line Styles", "Choose style for separator line");
		$qode_subtitle_like_separator_container->addChild("group1",$group1);

			$row1 = new QodePitchRow();
			$group1->addChild("row1",$row1);

				$qode_subtitle_like_separator_line_color = new QodePitchMetaField("colorsimple","qode_subtitle_like_separator_line_color","","Color","This is some description");
				$row1->addChild("qode_subtitle_like_separator_line_color",$qode_subtitle_like_separator_line_color);

				$qode_subtitle_like_separator_line_width = new QodePitchMetaField("textsimple","qode_subtitle_like_separator_line_width","","Width","This is some description");
				$row1->addChild("qode_subtitle_like_separator_line_width",$qode_subtitle_like_separator_line_width);

				$qode_subtitle_like_separator_line_thickness = new QodePitchMetaField("textsimple","qode_subtitle_like_separator_line_thickness","","Thickness","This is some description");
				$row1->addChild("qode_subtitle_like_separator_line_thickness",$qode_subtitle_like_separator_line_thickness);

				$qode_subtitle_like_separator_line_style = new QodePitchMetaField("selectsimple","qode_subtitle_like_separator_line_style","","Style","This is some description",array(
					"solid" => "Solid",
					"dashed" => "Dashed",
					"dotted" => "Dotted"
					));
				$row1->addChild("qode_subtitle_like_separator_line_style",$qode_subtitle_like_separator_line_style);

		$qode_subtitle_like_separator_margins = new QodePitchMetaField("text","qode_subtitle_like_separator_margins","","Margins for Subitle","Define left/right margins for subtitle from separator");
		$qode_subtitle_like_separator_container->addChild("qode_subtitle_like_separator_margins",$qode_subtitle_like_separator_margins);


	$qode_page_title_background_color = new QodePitchMetaField("color","qode_page-title-background-color","","Background Color","Choose background color for Title Area");
	$qode_page_title_area_container->addChild("qode_page-title-background-color",$qode_page_title_background_color);

	$qode_show_page_title_image = new QodePitchMetaField("yesno","qode_show-page-title-image","no","Don't Show Background Image","Enable this option to hide background image in Title Area", array(), array("dependence" => true, "dependence_hide_on_yes" => "#qodef_qode_background_image_container", "dependence_show_on_yes" => ""));
	$qode_page_title_area_container->addChild("qode_show-page-title-image",$qode_show_page_title_image);

	$qode_background_image_container = new QodePitchContainer("qode_background_image_container","qode_show-page-title-image","yes");
	$qode_page_title_area_container->addChild("qode_background_image_container",$qode_background_image_container);

	$qode_title_image = new QodePitchMetaField("image","qode_title-image","","Background Image","Choose a background image for Title Area");
	$qode_background_image_container->addChild("qode_title-image",$qode_title_image);

	$qode_title_overlay_image = new QodePitchMetaField("image","qode_title-overlay-image","","Pattern Overlay Image","Choose an image to be used as pattern over Title Area");
	$qode_background_image_container->addChild("qode_title-overlay-image",$qode_title_overlay_image);

	$qode_responsive_title_image = new QodePitchMetaField("selectblank","qode_responsive-title-image","","Responsive Background Image","Do you want to make Title background image responsive?", array(
			"no" => "No",
			"yes" => "Yes"),
		array("dependence" => true,
			"hide" => array(
				"yes"=>"#qodef_qode_responsive_title_image_container, #qodef_qode_title-height"),
			"show" => array(
				""=>"#qodef_qode_responsive_title_image_container, #qodef_qode_title-height",
				"no"=>"#qodef_qode_responsive_title_image_container, #qodef_qode_title-height") ));
	$qode_background_image_container->addChild("qode_responsive-title-image",$qode_responsive_title_image);


	$qode_responsive_title_image_container = new QodePitchContainer("qode_responsive_title_image_container","qode_responsive-title-image","yes");
	$qode_background_image_container->addChild("qode_responsive_title_image_container",$qode_responsive_title_image_container);

	$qode_fixed_title_image = new QodePitchMetaField("selectblank","qode_fixed-title-image","","Parallax Background Image","Do you want background image to have parallax effect?", array(
		"no" => "No",
		"yes" => "Yes",
		"yes_zoom" => "Yes, with zoom out"
	));
	$qode_responsive_title_image_container->addChild("qode_fixed-title-image",$qode_fixed_title_image);

	$qode_title_height = new QodePitchMetaField("text","qode_title-height","","Title Height (px)","Set a height for Title Area in pixels", array(), array("col_width" => 3));
	$qode_page_title_area_container->addChild("qode_title-height",$qode_title_height);

	
	//$qode_separator_bellow_title = new QodePitchMetaField("select","qode_separator_bellow_title","","Separator Under Title Text","Do you want to have a separator under title text?", array( "" => "",
	//	"no" => "No",
	//	"yes" => "Yes"
	//));
	//$qode_page_title_area_container->addChild("qode_separator_bellow_title",$qode_separator_bellow_title);

	//$qode_title_separator_color = new QodePitchMetaField("color","qode_title_separator_color","","Separator Color","Choose a color for separator");
	//$qode_page_title_area_container->addChild("qode_title_separator_color",$qode_title_separator_color);

//Separator

	$qode_title_separator = new QodePitchMetaField("selectblank","qode_title_separator","","Show Title Separator","Enabling this option will display a separator underneath Title", array(
			"no" => "No",
			"yes" => "Yes"
		),
		array("dependence" => true,
			"hide" => array(
				"" => "#qodef_qode_title_separator_container",
				"no" => "#qodef_qode_title_separator_container"
			),
			"show" => array(
				"yes" => "#qodef_qode_title_separator_container"
			)
		));
	$qode_title_standard_container->addChild("qode_title_separator",$qode_title_separator);

	$qode_title_separator_container = new QodePitchContainer("qode_title_separator_container","qode_title_separator","", array('', 'no'));
	$qode_title_standard_container->addChild("qode_title_separator_container",$qode_title_separator_container);

		$qode_title_separator_format = new QodePitchMetaField("select","qode_title_separator_format","","Format","Choose a format (type) of separator", array(
				"" => "",
                "normal" => "Normal",
                "with_icon" => "With Icon",
                "with_custom_icon" => "With Custom Icon"
        ), array(
        "dependence" => true,
        "hide" => array(
        	"" => "#qodef_qode_separator_with_icon_container, #qodef_qode_separator_with_custom_icon_container",
        	"normal" => "#qodef_qode_separator_with_icon_container, #qodef_qode_separator_with_custom_icon_container",
        	"with_custom_icon" => "#qodef_qode_separator_with_icon_container",
        	"with_icon" => "#qodef_qode_separator_with_custom_icon_container"),
        "show" => array("with_icon" => "#qodef_qode_separator_with_icon_container", "with_custom_icon" => "#qodef_qode_separator_with_custom_icon_container" )));

        $qode_title_separator_container->addChild("qode_title_separator_format",$qode_title_separator_format);

        $qode_separator_with_icon_container = new QodePitchContainer("qode_separator_with_icon_container","qode_title_separator_format","normal",array("normal","with_custom_icon",""));
		$qode_title_separator_container->addChild("qode_separator_with_icon_container",$qode_separator_with_icon_container);

             //init icon pack hide and show array. It will be populated dinamically from collections array
			$separator_icon_pack_hide_array = array();
			$separator_icon_pack_show_array = array();
			$separator_icon_pack_hide_array[""] = "";

			//do we have some collection added in collections array?
			if(is_array($qode_pitch_IconCollections->iconCollections) && count($qode_pitch_IconCollections->iconCollections)) {
				//get collections params array. It will contain values of 'param' property for each collection
				$separator_icon_collections_params = $qode_pitch_IconCollections->getIconCollectionsParams();

				//foreach collection generate hide and show array
				foreach ($qode_pitch_IconCollections->iconCollections as $dep_collection_key => $dep_collection_object) {
					$separator_icon_pack_hide_array[$dep_collection_key] = '';

					//we need to include only current collection in show string as it is the only one that needs to show
					$separator_icon_pack_show_array[$dep_collection_key] = '#qodef_qode_separator_icon_'.$dep_collection_object->param.'_container';
					$separator_icon_pack_hide_array[""] .= '#qodef_qode_separator_icon_'.$dep_collection_object->param.'_container,';

					//for all collections param generate hide string
					foreach ($separator_icon_collections_params as $separator_icon_collections_param) {
						//we don't need to include current one, because it needs to be shown, not hidden
						if($separator_icon_collections_param !== $dep_collection_object->param) {
							$separator_icon_pack_hide_array[$dep_collection_key].= '#qodef_qode_separator_icon_'.$separator_icon_collections_param.'_container,';
						}
					}

					//remove remaining ',' character
					$separator_icon_pack_hide_array[$dep_collection_key] = rtrim($separator_icon_pack_hide_array[$dep_collection_key], ',');

				}

				$separator_icon_pack_hide_array[""] = rtrim($separator_icon_pack_hide_array[""], ',');

			}

			$qode_separator_icon_pack = new QodePitchMetaField(
				"selectblank",
				"qode_separator_icon_pack",
				"",
				"Separator Icon Pack",
				"Choose icon pack for separator",
				$qode_pitch_IconCollections->getIconCollections(),
				array(
					"dependence" => true,
					"hide" => $separator_icon_pack_hide_array,
					"show" => $separator_icon_pack_show_array
				));

			$qode_separator_with_icon_container->addChild("qode_separator_icon_pack", $qode_separator_icon_pack);


			if(is_array($qode_pitch_IconCollections->iconCollections) && count($qode_pitch_IconCollections->iconCollections)) {
				//foreach icon collection we need to generate separate container that will have dependency set
				//it will have one field inside with icons dropdown
				foreach ($qode_pitch_IconCollections->iconCollections as $collection_key => $collection_object) {
					$icons_array = $collection_object->getIconsArray();

					//get icon collection keys (keys from collections array, e.g 'font_awesome', 'font_elegant' etc.)
					$icon_collections_keys = $qode_pitch_IconCollections->getIconCollectionsKeys();

					//unset current one, because it doesn't have to be included in dependency that hides icon container
					unset($icon_collections_keys[array_search($collection_key, $icon_collections_keys)]);

					$separator_icon_hide_values = $icon_collections_keys;
					$separator_icon_hide_values[] = "";
					$qode_separator_icon_container = new QodePitchContainer("qode_separator_icon_".$collection_object->param."_container", "qode_separator_icon_pack", "", $separator_icon_hide_values);
					$qode_separator_icon = new QodePitchMetaField("select", "qode_separator_icon_".$collection_object->param, "", "Separator Icon","Choose Separator Icon", $icons_array, array("col_width" => 3));
					$qode_separator_icon_container->addChild("qode_separator_icon_".$collection_object->param, $qode_separator_icon);

					$qode_separator_with_icon_container->addChild("qode_separator_icon_".$collection_object->param."_container", $qode_separator_icon_container);
				}

			}

			$group1 = new QodePitchGroup("Icon Style", "Choose icon style");
			$qode_separator_with_icon_container->addChild("group1",$group1);

				$row1 = new QodePitchRow();
				$group1->addChild("row1",$row1);

					$qode_title_separator_icon_color = new QodePitchMetaField("colorsimple","qode_title_separator_icon_color","","Color","Choose a color of icon for Title separator");
					$row1->addChild("qode_title_separator_icon_color",$qode_title_separator_icon_color);

					$qode_title_separator_icon_hover_color = new QodePitchMetaField("colorsimple","qode_title_separator_icon_hover_color","","Hover Color","Choose a hover color of icon for Title separator");
					$row1->addChild("qode_title_separator_icon_hover_color",$qode_title_separator_icon_hover_color);

					$qode_title_separator_icon_custom_size = new QodePitchMetaField("textsimple","qode_title_separator_icon_custom_size","","Icon Size","Choose size of icon");
					$row1->addChild("qode_title_separator_icon_custom_size",$qode_title_separator_icon_custom_size);

			$group2 = new QodePitchGroup("Icon Position and Margin","Choose icon position and left(right) margin");
			$qode_separator_with_icon_container->addChild("group2",$group2);

				$row1 = new QodePitchRow();
				$group2->addChild("row1",$row1);

					$qode_title_separator_icon_position = new QodePitchMetaField("selectsimple","qode_title_separator_icon_position","","Icon Position","Choose a position for an icon", array(
		                "left" => "Left",
		                "center" => "Center",
		                "right" => "Right"
		        	));
		        	$row1->addChild("qode_title_separator_icon_position",$qode_title_separator_icon_position);

		        	$qode_title_separator_icon_margins = new QodePitchMetaField("textsimple","qode_title_separator_icon_margins","","Margins (px)","Enter margin that will refer to left and right margin of the icon");
		        	$row1->addChild("qode_title_separator_icon_margins",$qode_title_separator_icon_margins);

        	$qode_title_separator_icon_type = new QodePitchMetaField("selectblank","qode_title_separator_icon_type","","Icon Type","Choose icon type", array(
                "normal" => "Normal",
                "circle" => "Circle",
                "square" => "Square"
        	),array("dependence" => true,
        		"hide" => array("normal" => "#qodef_qode_title_separator_types_container", "" => "#qodef_qode_title_separator_types_container"),
        		"show" => array("circle" => "#qodef_qode_title_separator_types_container","square" => "#qodef_qode_title_separator_types_container")));
        	$qode_separator_with_icon_container->addChild("qode_title_separator_icon_type",$qode_title_separator_icon_type);

        	$qode_title_separator_types_container = new QodePitchContainer("qode_title_separator_types_container","qode_title_separator_icon_type","",array("","normal"));
			$qode_separator_with_icon_container->addChild("qode_title_separator_types_container",$qode_title_separator_types_container);

				$group1 = new QodePitchGroup("Border Style", "Define border style for icon");
				$qode_title_separator_types_container->addChild("group1",$group1);

					$row1 = new QodePitchRow();
					$group1->addChild("row1",$row1);

						$qode_title_separator_icon_border_radius = new QodePitchMetaField("textsimple","qode_title_separator_icon_border_radius","","Border Radius (px)","Enter border radius for icon");
                		$row1->addChild("qode_title_separator_icon_border_radius",$qode_title_separator_icon_border_radius);

                		$qode_title_separator_icon_border_width = new QodePitchMetaField("textsimple","qode_title_separator_icon_border_width","","Border Width (px)","Enter border width for icon");
                		$row1->addChild("qode_title_separator_icon_border_width",$qode_title_separator_icon_border_width);

                		$qode_title_separator_icon_border_color = new QodePitchMetaField("colorsimple","qode_title_separator_icon_border_color","","Border Color","Enter border color for icon");
                		$row1->addChild("qode_title_separator_icon_border_color",$qode_title_separator_icon_border_color);

                		$qode_title_separator_icon_border_hover_color = new QodePitchMetaField("colorsimple","qode_title_separator_icon_border_hover_color","","Border Hover Color","Enter border color for icon");
                		$row1->addChild("qode_title_separator_icon_border_hover_color",$qode_title_separator_icon_border_hover_color);

                $group2 = new QodePitchGroup("Additional Icon Style","Choose adition icon styling");
                $qode_title_separator_types_container->addChild("group2",$group2);

                	$row1 = new QodePitchRow();
                	$group2->addChild("row1",$row1);

                		$qode_title_separator_icon_shape_size = new QodePitchMetaField("textsimple","qode_title_separator_icon_shape_size","","Shape Size (px)","This is some description");
                		$row1->addChild("qode_title_separator_icon_shape_size",$qode_title_separator_icon_shape_size);

                		$qode_title_separator_icon_background_color = new QodePitchMetaField("colorsimple","qode_title_separator_icon_background_color","","Background Color","This is some description");
                		$row1->addChild("qode_title_separator_icon_background_color",$qode_title_separator_icon_background_color);

                		$qode_title_separator_icon_background_hover_color = new QodePitchMetaField("colorsimple","qode_title_separator_icon_background_hover_color","","Background Hover Color","This is some description");
                		$row1->addChild("qode_title_separator_icon_background_hover_color",$qode_title_separator_icon_background_hover_color);		                		

        $qode_separator_with_custom_icon_container = new QodePitchContainer("qode_separator_with_custom_icon_container","qode_title_separator_format","normal",array("normal","with_icon",""));
        $qode_title_separator_container->addChild("qode_separator_with_custom_icon_container",$qode_separator_with_custom_icon_container);

        	$qode_separator_custom_icon = new QodePitchMetaField("image","qode_separator_custom_icon","","Custom Icon","Choose custom icon for separator");
        	$qode_separator_with_custom_icon_container->addChild("qode_separator_custom_icon",$qode_separator_custom_icon);

        $qode_title_separator_type = new QodePitchMetaField("select","qode_title_separator_type","","Type","Choose a Title separator line style", array( "" => "",
                "solid" => "Solid",
                "dashed" => "Dashed"
        ));
        $qode_title_separator_container->addChild("qode_title_separator_type",$qode_title_separator_type);

        $qode_title_separator_position = new QodePitchMetaField("select","qode_title_separator_position","","Position","Choose a Title separator position", array( "" => "",
                "above" => "Above Title",
                "below" => "Below Title"
        ));
        $qode_title_separator_container->addChild("qode_title_separator_position",$qode_title_separator_position);

        $qode_title_separator_color = new QodePitchMetaField("color","qode_title_separator_color","","Color","Choose a color for Title separator");
        $qode_title_separator_container->addChild("qode_title_separator_color",$qode_title_separator_color);

        $group1 = new QodePitchGroup("Size",'Define size for Title separator');
        $qode_title_separator_container->addChild("group1",$group1);

        $row1 = new QodePitchRow();
        $group1->addChild("row1",$row1);

                $qode_title_separator_thickness = new QodePitchMetaField("textsimple","qode_title_separator_thickness","","Thickness (px)","This is some description");
                $row1->addChild("qode_title_separator_thickness",$qode_title_separator_thickness);

                $qode_title_separator_width = new QodePitchMetaField("textsimple","qode_title_separator_width","","Width (px)","This is some description");
                $row1->addChild("qode_title_separator_width",$qode_title_separator_width);

        $group2 = new QodePitchGroup("Margin",'Add space at top and bottom of Title separator');
        $qode_title_separator_container->addChild("group2",$group2);

        $row1 = new QodePitchRow();
        $group2->addChild("row1",$row1);

                $qode_title_separator_topmargin = new QodePitchMetaField("textsimple","qode_title_separator_topmargin","","Top Margin (px)","This is some description");
                $row1->addChild("qode_title_separator_topmargin",$qode_title_separator_topmargin);

                $qode_title_separator_bottommargin = new QodePitchMetaField("textsimple","qode_title_separator_bottommargin","","Bottom Margin (px)","This is some description");
                $row1->addChild("qode_title_separator_bottommargin",$qode_title_separator_bottommargin);
	
	$qode_title_graphics = new QodePitchMetaField("image","qode_title-graphics","","Title Graphics","Choose a graphic for Title Area, appearing above title");
	$qode_title_standard_container->addChild("qode_title-graphics",$qode_title_graphics);

	$qode_enable_breadcrumbs = new QodePitchMetaField("selectblank","qode_enable_breadcrumbs","","Enable Breadcrumbs","Do you want to display breadcrumbs in title area?", array(
		"no" => "No",
		"yes" => "Yes"
	), array("dependence" => true,
		"hide" => array(
			"" => "#qodef_animation_page_page_title_breadcrumbs_container",
			"no"=>"#qodef_animation_page_page_title_breadcrumbs_container"),
		"show" => array(
			"yes"=>"#qodef_animation_page_page_title_breadcrumbs_container") ));
	$qode_page_title_area_container->addChild("qode_enable_breadcrumbs",$qode_enable_breadcrumbs);

	$qode_page_breadcrumbs_color = new QodePitchMetaField("color","qode_page_breadcrumbs_color","","Breadcrumbs Color","Choose a color for breadcrumbs text ");
	$qode_page_title_area_container->addChild("qode_page_breadcrumbs_color",$qode_page_breadcrumbs_color);

	$qode_page_subtitle = new QodePitchMetaField("text","qode_page_subtitle","","Subtitle Text","Enter your subtitle text");
	$qode_page_title_area_container->addChild("qode_page_subtitle",$qode_page_subtitle);
	
	$qode_page_subtitle_position = new QodePitchMetaField("selectblank","qode_page_subtitle_position","","Subtitle Position","Choose a Subtitle position", array(
			"below_title" => "Below Title",
			"above_title" => "Above Title"
	));
	$qode_page_title_area_container->addChild("qode_page_subtitle_position",$qode_page_subtitle_position);
	

	$qode_page_subtitle_color = new QodePitchMetaField("color","qode_page_subtitle_color","","Subtitle Text Color","Choose a color for subtitle text");
	$qode_page_title_area_container->addChild("qode_page_subtitle_color",$qode_page_subtitle_color);

	$qode_title_content_style = new QodePitchGroup("Title Content Style", "Define style for title area content");
	$qode_page_title_area_container->addChild("qode_title_content_style", $qode_title_content_style);

		$row1 = new QodePitchRow();
		$qode_title_content_style->addChild("row1", $row1);

			$qode_title_area_content_background_color = new QodePitchMetaField("colorsimple","qode_title_area_content_background_color","","Title Area Content Background Color","Choose a background color for Title Area Content");
			$row1->addChild("qode_title_area_content_background_color",$qode_title_area_content_background_color);

			$qode_title_area_content_opacity = new QodePitchMetaField("textsimple","qode_title_area_content_opacity","","Title Area Content Background Color Opacity","Choose a transparency for the content area background color (0 = fully transparent, 1 = opaque)");
			$row1->addChild("qode_title_area_content_opacity",$qode_title_area_content_opacity);

    $qode_title_content_in_grid = new QodePitchMetaField("yesno","qode_title_content_in_grid","","Title Area Content In Grid","This option will show title area content in grid");
    $qode_page_title_area_container->addChild("qode_title_content_in_grid",$qode_title_content_in_grid);

    $qode_title_content_shadow = new QodePitchMetaField("yesno","qode_title_content_shadow","","Show Title Content Area Shadows","Enabling this option will show shadows on title content area");
    $qode_page_title_area_container->addChild("qode_title_content_shadow",$qode_title_content_shadow);

    $title_area_padding_group = new QodePitchGroup("Title Area Content Padding","Define padding for title area content");
	$qode_page_title_area_container->addChild("title_area_padding_group",$title_area_padding_group);

		$row1 = new QodePitchRow();
		$title_area_padding_group->addChild("row1",$row1);

			$qode_title_content_top_padding = new QodePitchMetaField("textsimple","qode_title_content_top_padding","","Top Padding","This is some description.");
			$row1->addChild("qode_title_content_top_padding",$qode_title_content_top_padding);

			$qode_title_content_right_padding = new QodePitchMetaField("textsimple","qode_title_content_right_padding","","Right Padding","This is some description.");
			$row1->addChild("qode_title_content_right_padding",$qode_title_content_right_padding);

			$qode_title_content_bottom_padding = new QodePitchMetaField("textsimple","qode_title_content_bottom_padding","","Bottom Padding","This is some description.");
			$row1->addChild("qode_title_content_bottom_padding",$qode_title_content_bottom_padding);

			$qode_title_content_left_padding = new QodePitchMetaField("textsimple","qode_title_content_left_padding","","Left Padding","This is some description.");
			$row1->addChild("qode_title_content_left_padding",$qode_title_content_left_padding);

	$qode_title_style = new QodePitchGroup("Title Style", "Define style for title");
	$qode_page_title_area_container->addChild("qode_title_style", $qode_title_style);

		$row1 = new QodePitchRow();
		$qode_title_style->addChild("row1", $row1);

			$qode_title_background_color = new QodePitchMetaField("colorsimple","qode_title_background_color","","Title Background Color","Choose a background color for Title");
			$row1->addChild("qode_title_background_color",$qode_title_background_color);

			$qode_title_opacity = new QodePitchMetaField("textsimple","qode_title_opacity","","Title Background Color Opacity","Choose a transparency for the title background color (0 = fully transparent, 1 = opaque)");
			$row1->addChild("qode_title_opacity",$qode_title_opacity);

	$title_padding_group = new QodePitchGroup("Padding","Define padding for title (When using separator around title, only right margin is counted for left/right margin)");
    $qode_page_title_area_container->addChild("title_padding_group",$title_padding_group);
        
        $row1 = new QodePitchRow(true);
        $title_padding_group->addChild("row1",$row1);

			$qode_title_top_padding = new QodePitchMetaField("textsimple","qode_title_top_padding","","Top Padding (px)","This is some description.");
			$row1->addChild("qode_title_top_padding",$qode_title_top_padding);	

			$qode_title_right_padding = new QodePitchMetaField("textsimple","qode_title_right_padding","","Right Padding (px)","This is some description.");
			$row1->addChild("qode_title_right_padding",$qode_title_right_padding);	

			$qode_title_bottom_padding = new QodePitchMetaField("textsimple","qode_title_bottom_padding","","Bottom Padding (px)","This is some description.");
			$row1->addChild("qode_title_bottom_padding",$qode_title_bottom_padding);	

			$qode_title_left_padding = new QodePitchMetaField("textsimple","qode_title_left_padding","","Left Padding (px)","This is some description.");
			$row1->addChild("qode_title_left_padding",$qode_title_left_padding);

	$qode_subtitle_style = new QodePitchGroup("Subtitle Style", "Define style for subtitle (When using separator around subtitle, only right margin is counted for left/right margin)");
	$qode_page_title_area_container->addChild("qode_subtitle_style", $qode_subtitle_style);

		$row1 = new QodePitchRow();
		$qode_subtitle_style->addChild("row1", $row1);	

			$qode_subtitle_background_color = new QodePitchMetaField("colorsimple","qode_subtitle_background_color","","Subtitle Background Color","Choose a background color for Subtitle");
			$row1->addChild("qode_subtitle_background_color",$qode_subtitle_background_color);

			$qode_subtitle_opacity = new QodePitchMetaField("textsimple","qode_subtitle_opacity","","Subtitle Background Color Opacity","Choose a transparency for the subtitle background color (0 = fully transparent, 1 = opaque)");
			$row1->addChild("qode_subtitle_opacity",$qode_subtitle_opacity);

	$subtitle_padding_group = new QodePitchGroup("Padding","Define padding for subtitle");
    $qode_page_title_area_container->addChild("subtitle_padding_group",$subtitle_padding_group);
        $row1 = new QodePitchRow(true);
        $subtitle_padding_group->addChild("row1",$row1);

			$qode_subtitle_top_padding = new QodePitchMetaField("textsimple","qode_subtitle_top_padding","","Top Padding (px)","This is some description.");
			$row1->addChild("qode_subtitle_top_padding",$qode_subtitle_top_padding);

			$qode_subtitle_right_padding = new QodePitchMetaField("textsimple","qode_subtitle_right_padding","","Right Padding (px)","This is some description.");
			$row1->addChild("qode_subtitle_right_padding",$qode_subtitle_right_padding);

			$qode_subtitle_bottom_padding = new QodePitchMetaField("textsimple","qode_subtitle_bottom_padding","","Bottom Padding (px)","This is some description.");
			$row1->addChild("qode_subtitle_bottom_padding",$qode_subtitle_bottom_padding);

			$qode_subtitle_left_padding = new QodePitchMetaField("textsimple","qode_subtitle_left_padding","","Left Padding (px)","This is some description.");
			$row1->addChild("qode_subtitle_left_padding",$qode_subtitle_left_padding);


//Portfolio Title Animations
$QodePitchTitleAnimations = new QodePitchMetaBox('portfolio_page', 'Title Animations', 'qode_show-page-title', array('no'));
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox('portfolio_title_animations', $QodePitchTitleAnimations);

//Whole title content animation
$page_page_title_whole_content_animations = new QodePitchMetaField('selectblank', 'page_page_title_whole_content_animations', '', 'Enable Whole Title Content Animation', 'This option will enable whole title content animation', array(
	'no' => 'No',
	'yes' => 'Yes'
),
	array(
		'dependence' => true,
		'hide' => array(
			'' => '#qodef_page_page_title_whole_content_animations_container',
			'no' => '#qodef_page_page_title_whole_content_animations_container'
		),
		'show' => array(
			'yes' => '#qodef_page_page_title_whole_content_animations_container'
		)
	));
$QodePitchTitleAnimations->addChild('page_page_title_whole_content_animations', $page_page_title_whole_content_animations);

$page_page_title_whole_content_animations_container = new QodePitchContainer('page_page_title_whole_content_animations_container', 'page_page_title_whole_content_animations', '', array('', 'no'));
$QodePitchTitleAnimations->addChild('page_page_title_whole_content_animations_container', $page_page_title_whole_content_animations_container);

$page_page_title_whole_content_animations_data_start = new QodePitchGroup('Scrolling Animation Start Point', 'These are properties for the first keyframe in scrolling animation');
$page_page_title_whole_content_animations_container->addChild('page_page_title_whole_content_animations_data_start', $page_page_title_whole_content_animations_data_start);

$row1 = new QodePitchRow();
$page_page_title_whole_content_animations_data_start->addChild('row1', $row1);

$page_page_title_whole_content_data_start = new QodePitchMetaField('textsimple', 'page_page_title_whole_content_data_start', '', 'Scrollbar Top Distance (px)');
$row1->addChild('page_page_title_whole_content_data_start', $page_page_title_whole_content_data_start);

$page_page_title_whole_content_start_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_whole_content_start_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row1->addChild('page_page_title_whole_content_start_custom_style', $page_page_title_whole_content_start_custom_style);

$page_page_title_whole_content_animations_data_end = new QodePitchGroup('Scrolling Animation End Point', 'These are properties for the last keyframe in scrolling animation');
$page_page_title_whole_content_animations_container->addChild('page_page_title_whole_content_animations_data_end', $page_page_title_whole_content_animations_data_end);

$row2 = new QodePitchRow();
$page_page_title_whole_content_animations_data_end->addChild('row2', $row2);

$page_page_title_whole_content_data_end = new QodePitchMetaField('textsimple', 'page_page_title_whole_content_data_end', '', 'Scrollbar Top Distance (px)');
$row2->addChild('page_page_title_whole_content_data_end', $page_page_title_whole_content_data_end);

$page_page_title_whole_content_end_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_whole_content_end_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row2->addChild('page_page_title_whole_content_end_custom_style', $page_page_title_whole_content_end_custom_style);

//Title Animations
$animation_page_page_title_container = new QodePitchContainerNoStyle('animation_page_page_title_container', 'qode_show_page_title_text', 'no');
$QodePitchTitleAnimations->addChild('animation_page_page_title_container', $animation_page_page_title_container);

$page_page_title_animations = new QodePitchMetaField('selectblank', 'page_page_title_animations', '', 'Enable Page Title Animations', 'This option will enable Page Title Scroll Animations',
	array(
		'no' => 'No',
		'yes' => 'Yes'
	),
	array(
		'dependence' => true,
		'hide' => array(
			'' => '#qodef_page_page_title_animations_container',
			'no' => '#qodef_page_page_title_animations_container'
		),
		'show' => array(
			'yes' => '#qodef_page_page_title_animations_container'
		) ));

$animation_page_page_title_container->addChild('page_page_title_animations', $page_page_title_animations);

$page_page_title_animations_container = new QodePitchContainer('page_page_title_animations_container', 'page_page_title_animations', '', array('', 'no'));
$animation_page_page_title_container->addChild('page_page_title_animations_container', $page_page_title_animations_container);

$page_page_title_animations_data_start = new QodePitchGroup('Scrolling Animation Start Point', 'These are properties for the first keyframe in scrolling animation');
$page_page_title_animations_container->addChild('page_page_title_animations_data_start', $page_page_title_animations_data_start);

$row1 = new QodePitchRow();
$page_page_title_animations_data_start->addChild('row1', $row1);

$page_page_title_data_start = new QodePitchMetaField('textsimple', 'page_page_title_data_start', '', 'Scrollbar Top Distance (px)');
$row1->addChild('page_page_title_data_start', $page_page_title_data_start);

$page_page_title_start_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_start_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row1->addChild('page_page_title_start_custom_style', $page_page_title_start_custom_style);

$page_page_title_animations_data_end = new QodePitchGroup('Scrolling Animation End Point', 'These are properties for the last keyframe in scrolling animation');
$page_page_title_animations_container->addChild('page_page_title_animations_data_end', $page_page_title_animations_data_end);

$row2 = new QodePitchRow();
$page_page_title_animations_data_end->addChild('row2', $row2);

$page_page_title_data_end = new QodePitchMetaField('textsimple', 'page_page_title_data_end', '', 'Scrollbar Top Distance (px)');
$row2->addChild('page_page_title_data_end', $page_page_title_data_end);

$page_page_title_end_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_end_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row2->addChild('page_page_title_end_custom_style', $page_page_title_end_custom_style);

//Title Separator Animations
$page_page_title_separator_animations = new QodePitchMetaField('selectblank', 'page_page_title_separator_animations', '', 'Enable Page Separator Title Animations', 'This option will enable Page Title Separator Scroll Animations',
	array(
		'no' => 'No',
		'yes' => 'Yes'
	),
	array(
		'dependence' => true,
		'hide' => array(
			'' => '#qodef_page_page_title_separator_animations_container',
			'no' => '#qodef_page_page_title_separator_animations_container'
		),
		'show' => array(
			'yes' => '#qodef_page_page_title_separator_animations_container'
		)
	));
$QodePitchTitleAnimations->addChild('page_page_title_separator_animations', $page_page_title_separator_animations);

$page_page_title_separator_animations_container = new QodePitchContainer('page_page_title_separator_animations_container', 'page_page_title_separator_animations', '', array('no', ''));
$QodePitchTitleAnimations->addChild('page_page_title_separator_animations_container', $page_page_title_separator_animations_container);

$page_page_title_separator_animations_data_start = new QodePitchGroup('Scrolling Animation Start Point', 'These are properties for the first keyframe in scrolling animation');
$page_page_title_separator_animations_container->addChild('page_page_title_separator_animations_data_start', $page_page_title_separator_animations_data_start);

$row1 = new QodePitchRow();
$page_page_title_separator_animations_data_start->addChild('row1', $row1);

$page_page_title_separator_data_start = new QodePitchMetaField('textsimple', 'page_page_title_separator_data_start', '', 'Scrollbar Top Distance (px)');
$row1->addChild('page_page_title_separator_data_start', $page_page_title_separator_data_start);

$page_page_title_separator_start_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_separator_start_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row1->addChild('page_page_title_separator_start_custom_style', $page_page_title_separator_start_custom_style);

$page_page_title_separator_animations_data_end = new QodePitchGroup('Scrolling Animation End Point', 'These are properties for the last keyframe in scrolling animation');
$page_page_title_separator_animations_container->addChild('page_page_title_separator_animations_data_end', $page_page_title_separator_animations_data_end);

$row2 = new QodePitchRow();
$page_page_title_separator_animations_data_end->addChild('row2', $row2);

$page_page_title_separator_data_end = new QodePitchMetaField('textsimple', 'page_page_title_separator_data_end', '', 'Scrollbar Top Distance (px)');
$row2->addChild('page_page_title_separator_data_end', $page_page_title_separator_data_end);

$page_page_title_separator_end_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_separator_end_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row2->addChild('page_page_title_separator_end_custom_style', $page_page_title_separator_end_custom_style);

//Subtitle Animations
$page_page_subtitle_animations = new QodePitchMetaField('selectblank', 'page_page_subtitle_animations', '', 'Enable Page Subtitle Animations', 'This option will enable Page Subtitle Scroll Animations',
	array(
		'no' => 'No',
		'yes' => 'Yes'
	),
	array(
		'dependence' => true,
		'hide' => array(
			'' => '#qodef_page_page_subtitle_animations_container',
			'no' => '#qodef_page_page_subtitle_animations_container'
		),
		'show' => array(
			'yes' => '#qodef_page_page_subtitle_animations_container'
		)
	));
$QodePitchTitleAnimations->addChild('page_page_subtitle_animations', $page_page_subtitle_animations);

$page_page_subtitle_animations_container = new QodePitchContainer('page_page_subtitle_animations_container', 'page_page_subtitle_animations', '', array('', 'no'));
$QodePitchTitleAnimations->addChild('page_page_subtitle_animations_container', $page_page_subtitle_animations_container);

$page_page_subtitle_animations_data_start = new QodePitchGroup('Scrolling Animation Start Point', 'These are properties for the first keyframe in scrolling animation');
$page_page_subtitle_animations_container->addChild('page_page_subtitle_animations_data_start', $page_page_subtitle_animations_data_start);

$row1 = new QodePitchRow();
$page_page_subtitle_animations_data_start->addChild('row1', $row1);

$page_page_subtitle_data_start = new QodePitchMetaField('textsimple', 'page_page_subtitle_data_start', '', 'Scrollbar Top Distance (px)');
$row1->addChild('page_page_subtitle_data_start', $page_page_subtitle_data_start);

$page_page_subtitle_start_custom_style = new QodePitchMetaField('textareasimple', 'page_page_subtitle_start_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row1->addChild('page_page_subtitle_start_custom_style', $page_page_subtitle_start_custom_style);

$page_page_subtitle_animations_data_end = new QodePitchGroup('Scrolling Animation End Point', 'These are properties for the last keyframe in scrolling animation');
$page_page_subtitle_animations_container->addChild('page_page_subtitle_animations_data_end', $page_page_subtitle_animations_data_end);

$row2 = new QodePitchRow();
$page_page_subtitle_animations_data_end->addChild('row2', $row2);

$page_page_subtitle_data_end = new QodePitchMetaField('textsimple', 'page_page_subtitle_data_end', '', 'Scrollbar Top Distance (px)');
$row2->addChild('page_page_subtitle_data_end', $page_page_subtitle_data_end);

$page_page_subtitle_end_custom_style = new QodePitchMetaField('textareasimple', 'page_page_subtitle_end_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row2->addChild('page_page_subtitle_end_custom_style', $page_page_subtitle_end_custom_style);

//Graphic Animations
$page_page_title_graphic_animations = new QodePitchMetaField('selectblank', 'page_page_title_graphic_animations', '', 'Enable Page Title Graphic Animations', 'This option will enable Page Title Graphic Scroll Animations',
	array(
		'no' => 'No',
		'yes' => 'Yes'
	),
	array(
		'dependence' => true,
		'hide' => array(
			'' => '#qodef_page_page_title_graphic_animations_container',
			'no' => '#qodef_page_page_title_graphic_animations_container'
		),
		'show' => array(
			'yes' => '#qodef_page_page_title_graphic_animations_container'
		)
	));
$QodePitchTitleAnimations->addChild('page_page_title_graphic_animations', $page_page_title_graphic_animations);

$page_page_title_graphic_animations_container = new QodePitchContainer('page_page_title_graphic_animations_container', 'page_page_title_graphic_animations', '', array('', 'no'));
$QodePitchTitleAnimations->addChild('page_page_title_graphic_animations_container', $page_page_title_graphic_animations_container);

$page_page_title_graphic_animations_data_start = new QodePitchGroup('Scrolling Animation Start Point', 'These are properties for the first keyframe in scrolling animation');
$page_page_title_graphic_animations_container->addChild('page_page_title_graphic_animations_data_start', $page_page_title_graphic_animations_data_start);

$row1 = new QodePitchRow();
$page_page_title_graphic_animations_data_start->addChild('row1', $row1);

$page_page_title_graphic_data_start = new QodePitchMetaField('textsimple', 'page_page_title_graphic_data_start', '', 'Scrollbar Top Distance (px)');
$row1->addChild('page_page_title_graphic_data_start', $page_page_title_graphic_data_start);

$page_page_title_graphic_start_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_graphic_start_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row1->addChild('page_page_title_graphic_start_custom_style', $page_page_title_graphic_start_custom_style);

$page_page_title_graphic_animations_data_end = new QodePitchGroup('Scrolling Animation End Point', 'These are properties for the last keyframe in scrolling animation');
$page_page_title_graphic_animations_container->addChild('page_page_title_graphic_animations_data_end', $page_page_title_graphic_animations_data_end);

$row2 = new QodePitchRow();
$page_page_title_graphic_animations_data_end->addChild('row2', $row2);

$page_page_title_graphic_data_end = new QodePitchMetaField('textsimple', 'page_page_title_graphic_data_end', '', 'Scrollbar Top Distance (px)');
$row2->addChild('page_page_title_graphic_data_end', $page_page_title_graphic_data_end);

$page_page_title_graphic_end_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_graphic_end_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row2->addChild('page_page_title_graphic_end_custom_style', $page_page_title_graphic_end_custom_style);

//Breadcrumb animations
$animation_page_page_title_breadcrumbs_container = new QodePitchContainerNoStyle('animation_page_page_title_breadcrumbs_container', 'qode_enable_breadcrumbs', 'no');
$QodePitchTitleAnimations->addChild('animation_page_page_title_breadcrumbs_container', $animation_page_page_title_breadcrumbs_container);

$page_page_title_breadcrumbs_animations = new QodePitchMetaField('selectblank', 'page_page_title_breadcrumbs_animations', '', 'Enable Page Title Breadcrumbs Animations', 'This option will enable Page Title Breadcrumbs Scroll Animations',
	array(
		'no' => 'No',
		'yes' => 'Yes'
	),
	array(
		'dependence' => true,
		'hide' => array(
			'' => '#qodef_page_page_title_breadcrumbs_animations_container',
			'no' => '#qodef_page_page_title_breadcrumbs_animations_container'
		),
		'show' => array(
			'yes' => '#qodef_page_page_title_breadcrumbs_animations_container'
		)
	));
$animation_page_page_title_breadcrumbs_container->addChild('page_page_title_breadcrumbs_animations', $page_page_title_breadcrumbs_animations);

$page_page_title_breadcrumbs_animations_container = new QodePitchContainer('page_page_title_breadcrumbs_animations_container', 'page_page_title_breadcrumbs_animations', '', array('', 'no'));
$animation_page_page_title_breadcrumbs_container->addChild('page_page_title_breadcrumbs_animations_container', $page_page_title_breadcrumbs_animations_container);

$page_page_title_breadcrumbs_animations_data_start = new QodePitchGroup('Scrolling Animation Start Point', 'These are properties for the first keyframe in scrolling animation');
$page_page_title_breadcrumbs_animations_container->addChild('page_page_title_breadcrumbs_animations_data_start', $page_page_title_breadcrumbs_animations_data_start);

$row1 = new QodePitchRow();
$page_page_title_breadcrumbs_animations_data_start->addChild('row1', $row1);

$page_page_title_breadcrumbs_data_start = new QodePitchMetaField('textsimple', 'page_page_title_breadcrumbs_data_start', '', 'Scrollbar Top Distance (px)');
$row1->addChild('page_page_title_breadcrumbs_data_start', $page_page_title_breadcrumbs_data_start);

$page_page_title_breadcrumbs_start_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_breadcrumbs_start_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row1->addChild('page_page_title_breadcrumbs_start_custom_style', $page_page_title_breadcrumbs_start_custom_style);

$page_page_title_breadcrumbs_animations_data_end = new QodePitchGroup('Scrolling Animation End Point', 'These are properties for the last keyframe in scrolling animation');
$page_page_title_breadcrumbs_animations_container->addChild('page_page_title_breadcrumbs_animations_data_end', $page_page_title_breadcrumbs_animations_data_end);

$row2 = new QodePitchRow();
$page_page_title_breadcrumbs_animations_data_end->addChild('row2', $row2);

$page_page_title_breadcrumbs_data_end = new QodePitchMetaField('textsimple', 'page_page_title_breadcrumbs_data_end', '', 'Scrollbar Top Distance (px)');
$row2->addChild('page_page_title_breadcrumbs_data_end', $page_page_title_breadcrumbs_data_end);

$page_page_title_breadcrumbs_end_custom_style = new QodePitchMetaField('textareasimple', 'page_page_title_breadcrumbs_end_custom_style', '', 'Enter CSS declarations separated by semicolons');
$row2->addChild('page_page_title_breadcrumbs_end_custom_style', $page_page_title_breadcrumbs_end_custom_style);




// Content Bottom

$qodeContentBottom = new QodePitchMetaBox("portfolio_page", "Content Bottom");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("portfolio_content_bottom_page",$qodeContentBottom);

	$qode_enable_content_bottom_area = new QodePitchMetaField("selectblank","qode_enable_content_bottom_area","","Show Content Bottom Area","Do you want to show content bottom area?", array(
       "no" => "No",
       "yes" => "Yes"
      ),
      array("dependence" => true,
      	"hide" => array(
      		"no"=>"#qodef_qode_enable_content_bottom_area_container",
			""=>"#qodef_qode_enable_content_bottom_area_container"),
      	"show" => array(
      		"yes"=>"#qodef_qode_enable_content_bottom_area_container") ));
	$qodeContentBottom->addChild("qode_enable_content_bottom_area",$qode_enable_content_bottom_area);
	
	$qode_enable_content_bottom_area_container = new QodePitchContainer("qode_enable_content_bottom_area_container","qode_enable_content_bottom_area","no",array("", "no"));
	$qodeContentBottom->addChild("qode_enable_content_bottom_area_container",$qode_enable_content_bottom_area_container);

		$qode_content_bottom_background_color = new QodePitchMetaField("color","qode_content_bottom_background_color","","Background Color","Choose a color for content bottom area");
		$qode_enable_content_bottom_area_container->addChild("qode_content_bottom_background_color",$qode_content_bottom_background_color);
	
		$qode_choose_content_bottom_sidebar = new QodePitchMetaField("selectblank","qode_choose_content_bottom_sidebar","","Custom Widget","Choose Custom Widget area to display",$qode_custom_sidebars);
		$qode_enable_content_bottom_area_container->addChild("qode_choose_content_bottom_sidebar",$qode_choose_content_bottom_sidebar);
	
		$qode_content_bottom_sidebar_in_grid = new QodePitchMetaField("selectblank","qode_content_bottom_sidebar_in_grid","","Display in Grid","Enabling this option will place Content Bottom in grid",array(
	       "no" => "No",
	       "yes" => "Yes"
	      ));
		$qode_enable_content_bottom_area_container->addChild("qode_content_bottom_sidebar_in_grid",$qode_content_bottom_sidebar_in_grid);

// Side Bar Area

$qodeSideBar = new QodePitchMetaBox("portfolio_page", "Sidebar");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("portfolio_side_bar",$qodeSideBar);

	$qode_show_sidebar = new QodePitchMetaField("selectblank","qode_portfolio_show_sidebar","default","Layout","Choose the sidebar layout",array( "default" => "Default",
       "1" => "Sidebar 1/3 right",
       "2" => "Sidebar 1/4 right",
       "3" => "Sidebar 1/3 left",
       "4" => "Sidebar 1/4 left",
      ));
	$qodeSideBar->addChild("qode_portfolio_show_sidebar",$qode_show_sidebar);

	$qode_choose_sidebar = new QodePitchMetaField("selectblank","qode_choose-sidebar","default","Choose Widget Area in Sidebar","Choose Custom Widget area to display in Sidebar", $qode_custom_sidebars);
	$qodeSideBar->addChild("qode_choose-sidebar",$qode_choose_sidebar);

// Footer

$qodeFooter = new QodePitchMetaBox("portfolio_page", "Footer");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("portfolio_footer",$qodeFooter);

    $qode_footer_disable = new QodePitchMetaField("yesno","qode_footer-disable","no","Disable Footer for this Page",
        "Enabling this option will hide footer on your page");
    $qodeFooter->addChild("qode_footer-disable",$qode_footer_disable);


// SEO

$qodeSeo = new QodePitchMetaBox("portfolio_page", "SEO");
$qode_pitch_Framework->qodeMetaBoxes->addMetaBox("portfolio_seo",$qodeSeo);

	$seo_title = new QodePitchMetaField("text","qode_seo_title","","SEO Title","Enter custom Title for this page");
	$qodeSeo->addChild("qode_seo_title",$seo_title);

	$seo_keywords = new QodePitchMetaField("text","qode_seo_keywords","","SEO Keywords","Enter the list of keywords separated by commas");
	$qodeSeo->addChild("qode_seo_keywords",$seo_keywords);

	$seo_description = new QodePitchMetaField("textarea","qode_seo_description","","SEO Description","Enter meta description for this page");
	$qodeSeo->addChild("qode_seo_description",$seo_description);